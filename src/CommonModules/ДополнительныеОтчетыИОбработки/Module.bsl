
&Вместо("ВыполнитьОбработкуПоРегламентномуЗаданию")
Процедура табАид_ВыполнитьОбработкуПоРегламентномуЗаданию(ВнешняяОбработка, ИдентификаторКоманды) Экспорт
	
	//+табАид
	лпИдентификаторКоманды = "";
	ПараметрыКоманды = Новый Структура;
	Если ТипЗнч(ИдентификаторКоманды) = Тип("Структура") Тогда
		Если ИдентификаторКоманды.Свойство("ИдентификаторКоманды") Тогда
			лпИдентификаторКоманды = ИдентификаторКоманды.ИдентификаторКоманды;
		КонецЕсли;
		Если ИдентификаторКоманды.Свойство("ПараметрыКоманды") Тогда
			ПараметрыКоманды = ИдентификаторКоманды.ПараметрыКоманды;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ИдентификаторКоманды) = Тип("Строка") Тогда
		лпИдентификаторКоманды = ИдентификаторКоманды;
	КонецЕсли;
	//-табАид
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ЗапускДополнительныхОбработок);
	
	// Запись журнала регистрации
	ЗаписатьИнформацию(ВнешняяОбработка, 
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Команда %1: Запуск.'"), лпИдентификаторКоманды));
	
	// Выполнение команды
	Попытка
		//+табАид
		ВыполнитьКоманду(Новый Структура("ДополнительнаяОбработкаСсылка, ИдентификаторКоманды, ПараметрыКоманды", ВнешняяОбработка, лпИдентификаторКоманды, ПараметрыКоманды), Неопределено);
		//-табАид
	Исключение
		ЗаписатьОшибку(
		ВнешняяОбработка,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Команда %1: Ошибка выполнения:
		|%2'"),
		лпИдентификаторКоманды, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
	КонецПопытки;
	
	// Запись журнала регистрации
	ЗаписатьИнформацию(ВнешняяОбработка, 
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Команда %1: Завершение.'"), лпИдентификаторКоманды));
	
КонецПроцедуры
