Функция ОтправитьГП(МассивНомеров, ТекстСообщения, Знач Организация = Неопределено, КешНастроекПровайдера = Неопределено) Экспорт
	
	Результат = Новый Структура("ОтправленныеСообщения,ОписаниеОшибки", Новый Массив, "");
	
	// Подготовка строки получателей.
	СтрокаПолучателей = МассивПолучателейСтрокой(МассивНомеров);
	
	// Проверка на заполнение обязательных параметров.
	Если ПустаяСтрока(СтрокаПолучателей) Или ПустаяСтрока(ТекстСообщения) Тогда
		Результат.ОписаниеОшибки = НСтр("ru = 'Неверные параметры сообщения'");
		Возврат Результат;
	КонецЕсли;
	
	Если КешНастроекПровайдера = Неопределено тогда
		КешНастроекПровайдера = табАид_ОтправкаГолосовойПочты.НастройкиОтправкиГП(Организация);
	КонецЕсли;
	
	// Подготовка параметров запроса.
	ПараметрыЗапроса = Новый Соответствие;
	ПараметрыЗапроса.Вставить("МассивНомеров", МассивНомеров);
	ПараметрыЗапроса.Вставить("Фраза",         ТекстСообщения);
	ПараметрыЗапроса.Вставить("Прощание",      "Спасибо. Всего хорошего.");  //пока так
	
	// Отправка запроса.
	Ответ = ВыполнитьЗапрос(ПараметрыЗапроса, КешНастроекПровайдера);
	Если Ответ = Неопределено Тогда
		Результат.ОписаниеОшибки = Результат.ОписаниеОшибки + НСтр("ru = 'Соединение не установлено'");
		Возврат Результат;
	КонецЕсли;
	
	Для Каждого КлючИзначение из Ответ Цикл
		ОтправленноеСообщение = Новый Структура("НомерПолучателя,ИдентификаторСообщения",
		КлючИзначение.Ключ, КлючИзначение.Значение.ОтветСервера);
		Результат.ОтправленныеСообщения.Добавить(ОтправленноеСообщение);	
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Функция ВыполнитьЗапрос(ПараметрыЗапроса, КешНастроекПровайдера)
	
	соотвОтвет = Новый Соответствие; 
	
	HTTPСоединение = Новый HTTPСоединение("api-aid.tab-is.ru", 80);
	
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Authorization", "Basic " + КешНастроекПровайдера.ПарольТелефония); 
	Заголовки.Вставить("Content-Type",  "application/json");
	
	ЗапросHTTP = Новый HTTPЗапрос("/TiB/hs/PhoneBot/addTask", Заголовки);
	
	ЧтениеJSON    = Новый ЧтениеJSON;
	ЗаписьJSON    = Новый ЗаписьJSON; 
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, "", Истина);	
	ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
	
	стррПараметры      = новый Структура;
	стррПараметры.Вставить("Фраза",    ПараметрыЗапроса.Получить("Сообщение"));
	стррПараметры.Вставить("Прощание", ПараметрыЗапроса.Получить("Прощание"));
	
	МассивНомеров = ПараметрыЗапроса.Получить("МассивНомеров");
	Для Каждого ТекущийНомер из МассивНомеров Цикл
		
		Если ПустаяСтрока(ТекущийНомер) тогда
			Продолжить;
		КонецЕсли;
		
		стррРезультат = Новый Структура;
		стррРезультат.Вставить("ЗапросВыполнен", Ложь);
		стррРезультат.Вставить("ОтветСервера", "");
		
		ОтправляемыеДанные = новый Структура;
		ОтправляемыеДанные.Вставить("taskId", "3486077d-5a28-11ea-839d-02673b05f274");  //голосовой движок от Яндекса
		Если СтрНайти(ТекущийНомер, ", доб.") тогда
			ПозицияОсновнойТелефон   = СтрНайти(ТекущийНомер, ", доб.") - 1;   //без запятой
			ПозицияДобавочныйТелефон = ПозицияОсновнойТелефон + 8;
			ОтправляемыеДанные.Вставить("phone",           Лев(ТекущийНомер, ПозицияОсновнойТелефон));
			ОтправляемыеДанные.Вставить("extension",       Сред(ТекущийНомер, ПозицияДобавочныйТелефон));
			ОтправляемыеДанные.Вставить("extension_delay", 3000); //по умолчанию, в мс
		иначе	
			ОтправляемыеДанные.Вставить("phone",      ТекущийНомер); 
			ОтправляемыеДанные.Вставить("parameters", стррПараметры); 
		КонецЕсли;
		
		ЗаписатьJSON(ЗаписьJSON, ОтправляемыеДанные); 
		СтрокаДляТела = ЗаписьJSON.Закрыть();
		ЗапросHTTP.УстановитьТелоИзСтроки(СтрокаДляТела, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
		
		Попытка
			ОтветHTTP = HTTPСоединение.ВызватьHTTPМетод("POST", ЗапросHTTP);
			стррРезультат.ЗапросВыполнен = ОтветHTTP.КодСостояния = 200;
			Если стррРезультат.ЗапросВыполнен тогда
				ОтветСтрока = ОтветHTTP.ПолучитьТелоКакСтроку("UTF-8");
				стррРезультат.ОтветСервера = ОтветСтрока;
			иначе
				стррРезультат.ОтветСервера = "Код ответа сервера " + ОтветHTTP.КодСостояния;
			КонецЕсли;
		Исключение
			стррРезультат.ОтветСервера = ОписаниеОшибки();
		КонецПопытки;
		
		соотвОтвет.Вставить(ТекущийНомер, стррРезультат);
	КонецЦикла;
	
	Возврат соотвОтвет;
	
КонецФункции

Функция МассивПолучателейСтрокой(Массив)
	Результат = "";
	Для Каждого Элемент Из Массив Цикл
		Номер = ФорматироватьНомер(Элемент);
		Если НЕ ПустаяСтрока(Номер) Тогда 
			Если Не ПустаяСтрока(Результат) Тогда
				Прервать;
			КонецЕсли;
			Результат = Результат + Номер;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ФорматироватьНомер(Номер)
	Результат = "";
	ДопустимыеСимволы = "1234567890";
	Для Позиция = 1 По СтрДлина(Номер) Цикл
		Символ = Сред(Номер,Позиция,1);
		Если СтрНайти(ДопустимыеСимволы, Символ) > 0 Тогда
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;	
КонецФункции

Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	Настройки.АдресОписанияУслугиВИнтернете = "";
	Настройки.ПриОпределенииСпособовАвторизации = Истина;
	
КонецПроцедуры

Процедура ПриОпределенииСпособовАвторизации(СпособыАвторизации) Экспорт
	ПоляАвторизации = Новый СписокЗначений;
	ПоляАвторизации.Добавить("Пароль", НСтр("ru = 'API-ключ'"));
	СпособыАвторизации.Вставить("ПоКлючу", ПоляАвторизации);
	
КонецПроцедуры