
&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	Если ПроверитьДанные() тогда
		ЗаписатьДанныеНаСервере();
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	Если ПроверитьДанные() тогда
		ЗаписатьДанныеНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФлагДень1ПриИзменении(Элемент)
	ОбработатьИзменениеФлага(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ФлагДень2ПриИзменении(Элемент)
	ОбработатьИзменениеФлага(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ФлагДень3ПриИзменении(Элемент)
	ОбработатьИзменениеФлага(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ФлагДень4ПриИзменении(Элемент)
	ОбработатьИзменениеФлага(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ФлагДень5ПриИзменении(Элемент)
	ОбработатьИзменениеФлага(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ФлагДень6ПриИзменении(Элемент)
	ОбработатьИзменениеФлага(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ФлагДень7ПриИзменении(Элемент)
	ОбработатьИзменениеФлага(Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеФлага(ЭлементИмя)
	Если Не ЭтотОбъект[ЭлементИмя] тогда
		НомерДняНедели = Прав(ЭлементИмя, 1);
		ЭтотОбъект["НачалоДень" + НомерДняНедели]    = Дата('00010101');
		ЭтотОбъект["ОкончаниеДень" + НомерДняНедели] = Дата('00010101');
	КонецЕсли;
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Для к = 1 по 7 Цикл
		ИмяРеквизита = "ФлагДень"+к;
		
		Элементы["НачалоДень" + к].Доступность    = ЭтотОбъект[ИмяРеквизита];
		Элементы["ОкончаниеДень" + к].Доступность = ЭтотОбъект[ИмяРеквизита];
		
		Элементы["НачалоДень" + к].АвтоОтметкаНезаполненного    = ЭтотОбъект[ИмяРеквизита];
		Элементы["ОкончаниеДень" + к].АвтоОтметкаНезаполненного = ЭтотОбъект[ИмяРеквизита];
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ТипСообщения) Тогда 
		Если ЭтотОбъект.ТипСообщения <>  ПредопределенноеЗначение("Перечисление.табАид_ТипыСообщений.ГолосовоеСообщение") Тогда
			Элементы.КоличествоПовторов.Видимость = Ложь; 
			Элементы.ИнтервалСообщений.Видимость = Ложь;
		Иначе 
			Элементы.КоличествоПовторов.Видимость = Истина; 
			Элементы.ИнтервалСообщений.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность();
	УстановитьПараметрыВыбораШаблонСообщений();
КонецПроцедуры

&НаКлиенте
Функция ПроверитьДанные()
	
	Отказ          = Ложь;
	ВыбранОдинДень = Ложь;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ТипСообщения) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен тип сообщения.",, "ТипСообщения",, Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ШаблонСообщения) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен шаблон сообщения.",, "ШаблонСообщения",, Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ЭтотОбъект.КоличествоДнейЗадолженности) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено количество дней задолженности.",, "КоличествоДнейЗадолженности",, Отказ);
	КонецЕсли;
	
	Для к = 1 по 7 Цикл
		ДеньНедели = ?(к = 1, "Пн", ?(к = 2, "Вт", ?(к = 3, "Ср", ?(к = 4, "Чт", ?(к = 5, "Пт", ?(к = 6, "Сб", "Вс"))))));
		Если ЭтотОбъект["ФлагДень"+к] тогда
			Если ЭтотОбъект["НачалоДень"+к] >= ЭтотОбъект["ОкончаниеДень"+к] Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Время начала больше времени окончания для " + ДеньНедели,, "НачалоДень"+к,, Отказ);	
			КонецЕсли;
			Если Не Отказ Тогда
				//Проверяем на правильность заполнение времени, если установлен флаг УчитыватьЧасовойПояс
				Если ЭтотОбъект.УчитыватьЧасовойПояс Тогда
					РазницаЧасов = (ЭтотОбъект["ОкончаниеДень"+к] - ЭтотОбъект["НачалоДень"+к])/3600;
					Если РазницаЧасов < 1 Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При установленном флаге ""Учитывать часовой пояс"" 
						|разница между временем окончания и начала для " + ДеньНедели 
						+ " должна быть не меньше часа.",,"НачалоДень"+к,,Отказ);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ВыбранОдинДень = Истина;
		КонецЕсли;
	КонецЦикла;
	Если Не ВыбранОдинДень тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нужно выбрать хотя бы один день недели.",,,, Отказ);	
	КонецЕсли;
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура ЗаписатьДанныеНаСервере()
	
	НачатьТранзакцию();
	
	КлючПравила = Новый УникальныйИдентификатор;
	Для ДеньНедели = 1 по 7 Цикл
		Если ЭтотОбъект["ФлагДень" + ДеньНедели] тогда
			нзПравилаФормированияСобытийТАБАИД = РегистрыСведений.табАид_ПравилаФормированияСобытий.СоздатьНаборЗаписей();
			
			нзПравилаФормированияСобытийТАБАИД.Отбор.ВидДоговора.Установить(ЭтотОбъект.ВидДоговора);
			нзПравилаФормированияСобытийТАБАИД.Отбор.СтатусПартнера.Установить(ЭтотОбъект.СтатусКлиента);
			нзПравилаФормированияСобытийТАБАИД.Отбор.Партнер.Установить(ЭтотОбъект.Партнер);
			нзПравилаФормированияСобытийТАБАИД.Отбор.ОбъектРасчетов.Установить(ЭтотОбъект.ОбъектРасчетов);
			нзПравилаФормированияСобытийТАБАИД.Отбор.ТипСообщения.Установить(ЭтотОбъект.ТипСообщения);
			нзПравилаФормированияСобытийТАБАИД.Отбор.ДеньНедели.Установить(ДеньНедели);
			нзПравилаФормированияСобытийТАБАИД.Отбор.КоличествоДнейЗадолженности.Установить(ЭтотОбъект.КоличествоДнейЗадолженности);
			
			НоваяЗаписьРС = нзПравилаФормированияСобытийТАБАИД.Добавить();
			НоваяЗаписьРС.ВидДоговора    = ЭтотОбъект.ВидДоговора;
			НоваяЗаписьРС.СтатусПартнера = ЭтотОбъект.СтатусКлиента;
			НоваяЗаписьРС.Партнер        = ЭтотОбъект.Партнер;
			НоваяЗаписьРС.ОбъектРасчетов = ЭтотОбъект.ОбъектРасчетов;
			НоваяЗаписьРС.ТипСообщения   = ЭтотОбъект.ТипСообщения;
			НоваяЗаписьРС.ДеньНедели     = ДеньНедели;
			НоваяЗаписьРС.КоличествоДнейЗадолженности = ЭтотОбъект.КоличествоДнейЗадолженности;
			
			НоваяЗаписьРС.ВремяНачала          = ЭтотОбъект["НачалоДень" + ДеньНедели];
			НоваяЗаписьРС.ВремяОкончания       = ЭтотОбъект["ОкончаниеДень" + ДеньНедели];
			НоваяЗаписьРС.ИнтервалСообщений    = ЭтотОбъект.ИнтервалСообщений;
			НоваяЗаписьРС.КоличествоПовторов   = ЭтотОбъект.КоличествоПовторов;
			НоваяЗаписьРС.ШаблонСообщения      = ЭтотОбъект.ШаблонСообщения;     
			НоваяЗаписьРС.УчитыватьЧасовойПояс = ЭтотОбъект.УчитыватьЧасовойПояс;
			НоваяЗаписьРС.РазовоеУведомление   = ЭтотОбъект.РазовоеУведомление;
			НоваяЗаписьРС.КлючРегламентногоЗадания = Новый УникальныйИдентификатор;
			НоваяЗаписьРС.КлючПравила		   = КлючПравила;
			Если ЭтотОбъект.РазовоеУведомление Тогда 
				НоваяЗаписьРС.ДатаНачалаСобытияУведомления		   = ЭтотОбъект.ДатаСобытия;
			Иначе 
				лпДатаНачалаСобытияУведомления  =   НачалоНедели(ТекущаяДата())+(ДеньНедели-1)*24*60*60;
				Если лпДатаНачалаСобытияУведомления < НачалоДня(ТекущаяДата()) Тогда 
					лпДатаНачалаСобытияУведомления = лпДатаНачалаСобытияУведомления+24*60*60*7;
				КонецЕсли;
				
				НоваяЗаписьРС.ДатаНачалаСобытияУведомления 			= лпДатаНачалаСобытияУведомления;
			КонецЕсли;
			НоваяЗаписьРС.ДетализироватьПоОбъектамРасчетов = ЭтотОбъект.ДетализироватьПоОбъектамРасчетов;
			
			Попытка
				нзПравилаФормированияСобытийТАБАИД.Записать(Истина);
				
				//Запускаем регламентные задания для созданного правила.
				МассивКлючей = Новый Массив;
				МассивКлючей.Добавить(НоваяЗаписьРС.КлючРегламентногоЗадания);
				табАид_ОбщегоНазначенияПереопределяемый.ЗапускРегламентныхЗаданийТАБАИД(МассивКлючей);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
				ВызватьИсключение;
			КонецПопытки;	
			
		КонецЕсли;
	КонецЦикла;           
	
	Попытка
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТипСообщенияПриИзменении(Элемент)
	УстановитьПараметрыВыбораШаблонСообщений();
	УстановитьВидимостьДоступность()
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыВыбораШаблонСообщений()
	
	Если Не ЭтотОбъект.ТипСообщения.Пустая() тогда
		ПараметрыВыбора = Новый Массив;
		Если ЭтотОбъект.ТипСообщения = ПредопределенноеЗначение("Перечисление.табАид_ТипыСообщений.Email") тогда
			ПараметрыВыбора.Добавить(Новый ПараметрВыбора("ВидСообщения", "Письмо"));
		ИначеЕсли ЭтотОбъект.ТипСообщения = ПредопределенноеЗначение("Перечисление.табАид_ТипыСообщений.SMS") тогда
			ПараметрыВыбора.Добавить(Новый ПараметрВыбора("ВидСообщения", "СообщениеSMS"));
		ИначеЕсли ЭтотОбъект.ТипСообщения = ПредопределенноеЗначение("Перечисление.табАид_ТипыСообщений.ГолосовоеСообщение") тогда
			ПараметрыВыбора.Добавить(Новый ПараметрВыбора("ВидСообщения", "ГолосовоеСообщение"));
		КонецЕсли;
		Элементы.ШаблонСообщения.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонСообщенияСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ЭтотОбъект.ТипСообщения.Пустая() тогда
		Если ЭтотОбъект.ТипСообщения = ПредопределенноеЗначение("Перечисление.табАид_ТипыСообщений.Email") тогда
			ПараметрыФормы = Новый Структура("ВидСообщения", "Письмо");
		ИначеЕсли ЭтотОбъект.ТипСообщения = ПредопределенноеЗначение("Перечисление.табАид_ТипыСообщений.SMS") тогда
			ПараметрыФормы = Новый Структура("ВидСообщения", "СообщениеSMS");
		ИначеЕсли ЭтотОбъект.ТипСообщения = ПредопределенноеЗначение("Перечисление.табАид_ТипыСообщений.ГолосовоеСообщение") тогда
			ПараметрыФормы = Новый Структура("ВидСообщения", "ГолосовоеСообщение");
		КонецЕсли;
	КонецЕсли;
	ОткрытьФорму("Справочник.ШаблоныСообщений.Форма.ФормаЭлемента", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрыЗаполнения") тогда
		мПараметрыЗаполнения = Параметры.ПараметрыЗаполнения;
		Если ТипЗнч(мПараметрыЗаполнения) = Тип("Структура") тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, мПараметрыЗаполнения);
			Если мПараметрыЗаполнения.Свойство("ДеньНедели") тогда
				ЭтотОбъект["ФлагДень" + мПараметрыЗаполнения.ДеньНедели] = Истина;				
			КонецЕсли;
			
			Если мПараметрыЗаполнения.Свойство("ДатаСобытия") тогда
				ЭтотОбъект.ДатаСобытия = мПараметрыЗаполнения.ДатаСобытия;				
			КонецЕсли;
			Если Параметры.РазовоеУведомление Тогда 
				Элементы.ДетализироватьПоОбъектамРасчетов.Доступность = Ложь;
				Если мПараметрыЗаполнения.ДетализацияОтчета = 1 Тогда 
					ЭтотОбъект.ДетализироватьПоОбъектамРасчетов = Истина;
				Иначе 
					ЭтотОбъект.ДетализироватьПоОбъектамРасчетов = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	Элементы.ОбъектРасчетов.Видимость = Параметры.РазовоеУведомление;
	РазовоеУведомление = Параметры.РазовоеУведомление;
	
	Если Не РазовоеУведомление Тогда 
		
		Если Параметры.ДетализацияОтчета = 1 Тогда 
			ЭтотОбъект.ДетализироватьПоОбъектамРасчетов = Истина;
		Иначе 
			ЭтотОбъект.ДетализироватьПоОбъектамРасчетов = Ложь;
		КонецЕсли;
	Иначе 
		
	КонецЕсли;
	
	ЭтаФорма.ВертикальнаяПрокрутка = ВертикальнаяПрокруткаФормы.ИспользоватьБезРастягивания;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПовторовПриИзменении(Элемент)
	
	ЭтотОбъект.ИнтервалСообщений = ?(ЭтотОбъект.КоличествоПовторов > 0, 300, 0);
	
КонецПроцедуры
